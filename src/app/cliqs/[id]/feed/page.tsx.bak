import { prisma } from '@/lib/prisma';
import Image from 'next/image';
import { notFound } from 'next/navigation';
import { formatDistanceToNow } from 'date-fns';

export default async function Page({
  params,
}: {
  params: { id: string };
}) {
  const cliqId = params.id;

  const cliq = await prisma.cliq.findUnique({
    where: { id: cliqId },
    include: {
      posts: {
        orderBy: { createdAt: 'desc' },
        include: {
          author: {
            include: { profile: true },
          },
          replies: {
            orderBy: { createdAt: 'asc' },
            include: {
              author: {
                include: { profile: true },
              },
            },
          },
        },
      },
    },
  });

  if (!cliq) return notFound();

  return (
    <main className="max-w-3xl mx-auto px-4 py-16 space-y-10">
      <header>
        <h1 className="text-3xl font-bold text-indigo-700">{cliq.name} Feed</h1>
        <p className="text-gray-500 text-sm">Posts from members of cliq {cliqId}</p>
      </header>

      {cliq.posts.length === 0 ? (
        <p className="text-gray-500 text-sm">No posts yet.</p>
      ) : (
        <section className="space-y-6">
          {cliq.posts.map((post) => (
            <article
              key={post.id}
              className="bg-white border rounded-xl shadow-sm p-5 space-y-4"
            >
              <div className="flex items-center gap-4">
                <Image
                  src={post.author.profile?.avatarUrl || '/default-avatar.png'}
                  alt={post.author.profile?.username || 'User'}
                  width={40}
                  height={40}
                  className="rounded-full object-cover"
                />
                <div>
                  <p className="font-semibold text-gray-800">
                    {post.author.profile?.username || 'Unknown'}{' '}
                    <span className="ml-2 text-xs text-indigo-600 font-medium">
                      {post.author.profile?.role || 'Member'}
                    </span>
                  </p>
                  <p className="text-xs text-gray-500">
                    {formatDistanceToNow(new Date(post.createdAt))} ago
                  </p>
                </div>
              </div>

              <p className="text-gray-700">{post.content}</p>

              {post.imageUrl && (
                <Image
                  src={post.imageUrl}
                  alt="Post image"
                  width={800}
                  height={400}
                  className="w-full rounded-lg border object-cover max-h-80"
                />
              )}

              {post.replies.length > 0 && (
                <div className="mt-4 space-y-3 border-t pt-4">
                  {post.replies.map((reply) => (
                    <div key={reply.id} className="flex items-start gap-3">
                      <Image
                        src={reply.author.profile?.avatarUrl || '/default-avatar.png'}
                        alt={reply.author.profile?.username || 'User'}
                        width={32}
                        height={32}
                        className="rounded-full object-cover"
                      />
                      <div className="bg-gray-50 p-3 rounded-lg border w-full">
                        <p className="text-sm font-medium text-gray-800">
                          {reply.author.profile?.username || 'Unknown'}
                        </p>
                        <p className="text-sm text-gray-700">{reply.content}</p>
                        <p className="text-xs text-gray-400 mt-1">
                          {formatDistanceToNow(new Date(reply.createdAt))} ago
                        </p>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </article>
          ))}
        </section>
      )}
    </main>
  );
}

export async function generateMetadata({
  params,
}: {
  params: { id: string };
}) {
  return {
    title: `Cliq Feed: ${params.id}`,
  };
}
